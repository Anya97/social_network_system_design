openapi: 3.0.3
info:
  title: Social Network API
  version: 1.0.0

paths:
  /users/{user_id}/posts:
    post:
      summary: Create a new post
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [text, images, location]
              properties:
                text:
                  type: string
                images:
                  type: array
                  items:
                    type: object
                    required: [id, url]
                    properties:
                      id:
                        type: string
                      url:
                        type: string
                location:
                  type: object
                  required: [latitude, longitude]
                  properties:
                    latitude:
                      type: number
                      format: float
                    longitude:
                      type: number
                      format: float
      responses:
        '201':
          description: Post created
        '400':
          description: Invalid input
        '500':
          description: Internal server error

    get:
      summary: Get posts by a specific user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: List of posts by the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '400':
          description: Invalid request
        '500':
          description: Internal server error

  /posts/{post_id}:
    put:
      summary: Update a post
      parameters:
        - in: path
          name: post_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                images:
                  type: array
                  items:
                    type: object
                    required: [id, url]
                    properties:
                      id:
                        type: string
                      url:
                        type: string
                location:
                  type: object
                  properties:
                    latitude:
                      type: number
                      format: float
                    longitude:
                      type: number
                      format: float
      responses:
        '200':
          description: Post updated
        '400':
          description: Invalid input
        '500':
          description: Internal server error

    delete:
      summary: Delete a post
      parameters:
        - in: path
          name: post_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Post deleted
        '400':
          description: Invalid post ID
        '500':
          description: Internal server error

  /posts/{post_id}/comments:
    post:
      summary: Create a comment on a post
      parameters:
        - in: path
          name: post_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id, text]
              properties:
                user_id:
                  type: string
                text:
                  type: string
      responses:
        '201':
          description: Comment created
        '400':
          description: Invalid input
        '500':
          description: Internal server error

    get:
      summary: Get comments for a specific post
      parameters:
        - in: path
          name: post_id
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Comments list returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '400':
          description: Invalid request
        '500':
          description: Internal server error

  /comments/{comment_id}:
    put:
      summary: Update a comment
      parameters:
        - in: path
          name: comment_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [text]
              properties:
                text:
                  type: string
      responses:
        '200':
          description: Comment updated
        '400':
          description: Invalid input
        '500':
          description: Internal server error

    delete:
      summary: Delete a comment
      parameters:
        - in: path
          name: comment_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Comment deleted
        '400':
          description: Invalid comment ID
        '500':
          description: Internal server error

  /posts/{post_id}/likes:
    post:
      summary: Add a like to a post
      parameters:
        - in: path
          name: post_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [user_id]
              properties:
                user_id:
                  type: string
      responses:
        '201':
          description: Like added
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /posts/{post_id}/likes/{user_id}:
    delete:
      summary: Remove like from a post
      parameters:
        - in: path
          name: post_id
          required: true
          schema:
            type: string
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Like removed
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /users/{user_id}/subscriptions:
    post:
      summary: Subscribe to another user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [target_user_id]
              properties:
                target_user_id:
                  type: string
      responses:
        '201':
          description: Subscription created
        '400':
          description: Invalid input
        '500':
          description: Internal server error

    get:
      summary: Get the list of subscriptions for a user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: List of subscriptions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
        '500':
          description: Internal server error

  /users/{user_id}/subscriptions/{target_user_id}:
    delete:
      summary: Unsubscribe from a user
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
        - in: path
          name: target_user_id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Subscription removed
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /users/{user_id}/feed:
    get:
      summary: Get the user's feed
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: User feed returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '400':
          description: Invalid request
        '500':
          description: Internal server error

components:
  schemas:
    Post:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        text:
          type: string
        images:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              url:
                type: string
        location:
          type: object
          properties:
            latitude:
              type: number
              format: float
            longitude:
              type: number
              format: float
        created_at:
          type: string
          format: date-time

    Comment:
      type: object
      properties:
        id:
          type: string
        post_id:
          type: string
        user_id:
          type: string
        text:
          type: string
        created_at:
          type: string
          format: date-time

    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        full_name:
          type: string
